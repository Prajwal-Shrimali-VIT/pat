{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prajw\\\\Downloads\\\\pat\\\\src\\\\components\\\\pat6\\\\PasswordChecker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PasswordChecker({\n  callback\n}) {\n  _s();\n  const [data, setData] = useState({\n    length: '',\n    characterSets: {\n      lower: false,\n      upper: false,\n      number: false,\n      specialChar: false\n    }\n  });\n  function handleChnage(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setData(prevValue => {\n      return {\n        ...prevValue,\n        [name]: value\n      };\n    });\n  }\n  function handleChnageCheckBox(event) {\n    const {\n      name,\n      checked\n    } = event.target;\n    setData(prevValue => {\n      return {\n        ...prevValue,\n        characterSets: {\n          [name]: checked\n        }\n      };\n    });\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    console.log(data);\n    let division = 0;\n    let password = '';\n    if (data.characterSets.lower) {\n      division++;\n    }\n    if (data.characterSets.upper) {\n      division++;\n    }\n    if (data.characterSets.number) {\n      division++;\n    }\n    if (data.characterSets.specialChar) {\n      division++;\n    }\n    let divisionLength = parseInt(data.length / division);\n    for (let j = 0; j < divisionLength; j++) {\n      if (data.characterSets.lower) {\n        password += String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n      }\n      if (data.characterSets.upper) {\n        password += String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n      }\n      if (data.characterSets.number) {\n        password += String.fromCharCode(Math.floor(Math.random() * 10) + 48);\n      }\n      if (data.characterSets.specialChar) {\n        password += String.fromCharCode(Math.floor(Math.random() * 10) + 33);\n      }\n    }\n    console.log(password);\n    callback(password);\n    // setData({\n    //     length: '',\n    //     characterSets: {\n    //         lower: false,\n    //         upper: false,\n    //         number: false,\n    //         specialChar: false\n    //     },\n    // });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"length\",\n        type: \"number\",\n        onChange: handleChnage,\n        placeholder: \"Enter Length...\",\n        value: data.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lower\",\n        children: \"Lower Case Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"lower\",\n        type: \"checkbox\",\n        onChange: handleChnageCheckBox,\n        value: data.characterSets.lower\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upper\",\n        children: \"Upper Case Letters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"upper\",\n        type: \"checkbox\",\n        onChange: handleChnageCheckBox,\n        value: data.characterSets.upper\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"number\",\n        children: \"Numbers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"number\",\n        type: \"checkbox\",\n        onChange: handleChnageCheckBox,\n        value: data.characterSets.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"specialChar\",\n        children: \"Special Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"specialChar\",\n        type: \"checkbox\",\n        onChange: handleChnageCheckBox,\n        value: data.characterSets.specialChar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Generate New Random Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(PasswordChecker, \"+r2ta3sLhnH/lte9VcM7vmKNqgs=\");\n_c = PasswordChecker;\nexport default PasswordChecker;\nvar _c;\n$RefreshReg$(_c, \"PasswordChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordChecker","callback","_s","data","setData","length","characterSets","lower","upper","number","specialChar","handleChnage","event","name","value","target","prevValue","handleChnageCheckBox","checked","handleSubmit","preventDefault","console","log","division","password","divisionLength","parseInt","j","String","fromCharCode","Math","floor","random","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/prajw/Downloads/pat/src/components/pat6/PasswordChecker.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction PasswordChecker({ callback }) {\n    const [data, setData] = useState({\n        length: '',\n        characterSets: {\n            lower: false,\n            upper: false,\n            number: false,\n            specialChar: false\n        },\n    })\n\n    function handleChnage(event) {\n        const { name, value } = event.target;\n        setData((prevValue) => {\n            return({\n                ...prevValue,\n                [name]: value\n            })\n        })\n    }\n\n    function handleChnageCheckBox(event) {\n        const { name, checked } = event.target;\n        setData((prevValue) => {\n            return({\n                ...prevValue,\n                characterSets: {\n                    [name]: checked\n                }\n            })\n        })\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        console.log(data);\n        let division = 0;\n        let password = '';\n        if (data.characterSets.lower) {\n            division++;\n        } \n        if (data.characterSets.upper) {\n            division++;\n        }\n        if (data.characterSets.number) {\n            division++;\n        }\n        if (data.characterSets.specialChar) {\n            division++;\n        }\n        let divisionLength = parseInt(data.length / division);\n        for (let j = 0; j < divisionLength; j++) {\n            if (data.characterSets.lower) {\n                password += String.fromCharCode(Math.floor(Math.random() * 26) + 97);\n            }\n            if (data.characterSets.upper) {\n                password += String.fromCharCode(Math.floor(Math.random() * 26) + 65);\n            }\n            if (data.characterSets.number) {\n                password += String.fromCharCode(Math.floor(Math.random() * 10) + 48);\n            }\n            if (data.characterSets.specialChar) {\n                password += String.fromCharCode(Math.floor(Math.random() * 10) + 33);\n            }\n        }\n        console.log(password);\n        callback(password);\n        // setData({\n        //     length: '',\n        //     characterSets: {\n        //         lower: false,\n        //         upper: false,\n        //         number: false,\n        //         specialChar: false\n        //     },\n        // });\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input name='length' type='number' onChange={handleChnage} placeholder='Enter Length...' value={data.length}></input>\n                <label htmlFor=\"lower\">Lower Case Letters</label>\n                <input name='lower' type='checkbox' onChange={handleChnageCheckBox} value={data.characterSets.lower}></input>\n                <label htmlFor=\"upper\">Upper Case Letters</label>\n                <input name='upper' type='checkbox' onChange={handleChnageCheckBox} value={data.characterSets.upper}></input>\n                <label htmlFor=\"number\">Numbers</label>\n                <input name='number' type='checkbox' onChange={handleChnageCheckBox} value={data.characterSets.number}></input>\n                <label htmlFor=\"specialChar\">Special Characters</label>\n                <input name='specialChar' type='checkbox' onChange={handleChnageCheckBox} value={data.characterSets.specialChar}></input>\n                <button>Generate New Random Password</button>\n            </form>\n        </div>\n    )\n}\n\nexport default PasswordChecker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}